# ex_project
package ten;

public interface Sort {
	void ascedning(int[] arr);
	void descending(int[] arr);
	
	default void description() {
		System.out.println("숫자를 정렬하는 알고리즘 입니다");
	}

}

package ten;

public class QuickSort implements Sort{

	@Override
	public void ascedning(int[] arr) {
		System.out.println("QuickSort ascending");
		
	}

	@Override
	public void descending(int[] arr) {
		System.out.println("QuickSort descending");
	
	}

	@Override
	public void description() {
		Sort.super.description();
		System.out.println("Q입니다");
	}

}

package ten;

public class HeapSort implements Sort {

	@Override
	public void ascedning(int[] arr) {
		System.out.println("HeapSort ascending");
		
	}

	@Override
	public void descending(int[] arr) {
		System.out.println("HeapSort ascending");
		
	}

	@Override
	public void description() {
		Sort.super.description();
		System.out.println("H입니다");
	}

}


package ten;

public class BubbleSort implements Sort{

	@Override
	public void ascedning(int[] arr) {
		System.out.println("BubbleSort ascending");
		
	}

	@Override
	public void descending(int[] arr) {
		System.out.println("BubbleSort ascending");
		
	}

	@Override
	public void description() {
		Sort.super.description();
		System.out.println("B입니다");
	}

}

package ten;

import java.io.IOException;


public class SortTest {

	public static void main(String[] args) throws IOException {
		System.out.println("정렬 방식 선택");
		System.out.println("B : BubbleSort");
		System.out.println("H : HeapSort");
		System.out.println("Q : QuickSort");
	
		
		int ch = System.in.read();
		Sort sort = null;
		
		if(ch == 'B' || ch =='b') {
			sort = new BubbleSort();
		}
		else if(ch == 'H' || ch == 'h') {
			sort = new HeapSort();
		}
		else if(ch == 'Q' || ch == 'q') {
			sort = new QuickSort();
		}
		else {
			System.out.println("지원하지 않는 기능입니다.");
			return;
		}
		
		int[] arr = new int[10];
		sort.ascedning(arr);
		sort.descending(arr);
		sort.description();


	}

}



